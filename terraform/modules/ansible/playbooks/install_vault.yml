---
- name: Install and configure HashiCorp Vault
  hosts: all
  become: true
  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - wget
          - gpg
        state: present
        update_cache: yes

    - name: Add HashiCorp GPG key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Add HashiCorp repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        state: present
        filename: hashicorp

    - name: Install Vault
      ansible.builtin.apt:
        name: vault
        state: present
        update_cache: yes

    - name: Get Tailscale IP address
      ansible.builtin.shell: tailscale ip -4
      register: tailscale_ip
      changed_when: false

    - name: Create Vault config directory
      ansible.builtin.file:
        path: /etc/vault.d
        state: directory
        owner: vault
        group: vault
        mode: "0750"

    - name: Create Vault data directory
      ansible.builtin.file:
        path: /opt/vault/data
        state: directory
        owner: vault
        group: vault
        mode: "0750"

    - name: Get AWS region from EC2 metadata
      ansible.builtin.uri:
        url: http://169.254.169.254/latest/meta-data/placement/region
        return_content: yes
      register: aws_region

    - name: Configure Vault
      ansible.builtin.copy:
        content: |
          storage "s3" {
            bucket = "{{ s3_bucket_name }}"
            region = "{{ aws_region.content }}"
          }

          listener "tcp" {
            address     = "0.0.0.0:8200"
            tls_disable = 1
          }

          api_addr = "http://{{ tailscale_ip.stdout }}:8200"
          ui = true
        dest: /etc/vault.d/vault.hcl
        owner: vault
        group: vault
        mode: "0640"

    - name: Enable and start Vault service
      ansible.builtin.systemd:
        name: vault
        enabled: yes
        state: started

    - name: Wait for Vault to be ready
      ansible.builtin.wait_for:
        port: 8200
        delay: 2
        timeout: 30

    - name: Check if Vault is already initialized
      ansible.builtin.uri:
        url: http://localhost:8200/v1/sys/init
        method: GET
      register: vault_init_status

    - name: Initialize Vault
      ansible.builtin.uri:
        url: http://localhost:8200/v1/sys/init
        method: POST
        body_format: json
        body:
          secret_shares: 5
          secret_threshold: 3
      register: vault_init_result
      when: not vault_init_status.json.initialized

    - name: Save Vault init output locally
      ansible.builtin.copy:
        content: "{{ vault_init_result.json | to_nice_json }}"
        dest: /tmp/vault-init-keys.json
        mode: "0600"
      when: not vault_init_status.json.initialized

    - name: Upload Vault keys to S3
      amazon.aws.s3_object:
        bucket: "{{ s3_bucket_name }}"
        object: vault-init-keys.json
        src: /tmp/vault-init-keys.json
        mode: put
        encrypt: true
      when: not vault_init_status.json.initialized

    - name: Remove local keys file
      ansible.builtin.file:
        path: /tmp/vault-init-keys.json
        state: absent
      when: not vault_init_status.json.initialized

    - name: Display initialization message
      ansible.builtin.debug:
        msg: "Vault initialized. Keys saved to s3://{{ s3_bucket_name }}/vault-init-keys.json with encryption. SAVE THESE SECURELY!"
      when: not vault_init_status.json.initialized

    - name: Display already initialized message
      ansible.builtin.debug:
        msg: "Vault is already initialized"
      when: vault_init_status.json.initialized
